{"name": "test_flightBooking", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-cy=\"toCity\" class=\"srchForm__fields--searchField  dynBottom15 makeRelative \">...</div> is not clickable at point (196, 303). Other element would receive the click: <span data-cy=\"suggestions-0-sub-0\" class=\"allArprtSec__list\">...</span>\n  (Session info: chrome=133.0.6943.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ADE41805+3048677]\n\t(No symbol) [0x00007FF6ADAC3B20]\n\t(No symbol) [0x00007FF6AD948FBA]\n\t(No symbol) [0x00007FF6AD9A7129]\n\t(No symbol) [0x00007FF6AD9A4AE2]\n\t(No symbol) [0x00007FF6AD9A1B81]\n\t(No symbol) [0x00007FF6AD9A0A81]\n\t(No symbol) [0x00007FF6AD992314]\n\t(No symbol) [0x00007FF6AD9C728A]\n\t(No symbol) [0x00007FF6AD991BC6]\n\t(No symbol) [0x00007FF6AD9C74A0]\n\t(No symbol) [0x00007FF6AD9EF849]\n\t(No symbol) [0x00007FF6AD9C7063]\n\t(No symbol) [0x00007FF6AD98FFC0]\n\t(No symbol) [0x00007FF6AD991273]\n\tGetHandleVerifier [0x00007FF6ADEA1F5D+3443773]\n\tGetHandleVerifier [0x00007FF6ADEB596A+3524170]\n\tGetHandleVerifier [0x00007FF6ADEAB1A3+3481219]\n\tGetHandleVerifier [0x00007FF6ADC2A26A+855882]\n\t(No symbol) [0x00007FF6ADACEB3F]\n\t(No symbol) [0x00007FF6ADACAB64]\n\t(No symbol) [0x00007FF6ADACAD06]\n\t(No symbol) [0x00007FF6ADAB9E79]\n\tBaseThreadInitThunk [0x00007FFFC973E8D7+23]\n\tRtlUserThreadStart [0x00007FFFCAA7C34C+44]", "trace": "appium_driver = <appium.webdriver.webdriver.WebDriver (session=\"a532748a-5180-48b6-b995-4330059a2854\")>\n\n    def test_flightBooking(appium_driver):\n        driver = appium_driver\n        driver.get(\"https://www.makemytrip.com/\")\n        wait = WebDriverWait(driver, 30)\n        close_button = wait.until(\n            EC.presence_of_element_located((AppiumBy.XPATH, \"//span[@data-cy='loginBottomsheetCrossClick']\")))\n        close_button.click()\n        driver.find_element(AppiumBy.XPATH, \"//a[@data-cy='menu_item_clicked_0']\").click()\n        driver.find_element(AppiumBy.XPATH, \"//li[@data-cy='tab ROUNDTRIP']\").click()\n        driver.find_element(AppiumBy.XPATH,\"//div[@data-cy='fromCity']\").click()\n        driver.find_element(AppiumBy.XPATH, \"//input[@data-cy='select-from-input']\").send_keys(\"Mumbai\")\n        try:\n            element = WebDriverWait(driver, 20).until(\n                EC.presence_of_element_located((AppiumBy.XPATH, \"(//div[@class='makeFlex flexOne'])[1]\"))\n            )\n            element.click()\n        except StaleElementReferenceException:\n            print(\"StaleElementReferenceException occurred.\")\n        driver.implicitly_wait(5)\n        WebDriverWait(driver, 20).until(\n            EC.presence_of_element_located((AppiumBy.XPATH, \"//div[@data-cy='toCity']\"))\n>       ).click()\n          ^^^^^^^\n\ntest_flightBooking.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:573: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:454: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000018D82E582F0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF6ADAB9E79]\\\\n\\\\tBaseThreadInitThunk [0x00007FFFC973E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFFCAA7C34C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        if isinstance(payload, dict):\n            payload_dict = payload\n        else:\n            try:\n                payload_dict = json.loads(payload)\n            except (json.JSONDecodeError, TypeError):\n                return\n            if not isinstance(payload_dict, dict):\n                return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-cy=\"toCity\" class=\"srchForm__fields--searchField  dynBottom15 makeRelative \">...</div> is not clickable at point (196, 303). Other element would receive the click: <span data-cy=\"suggestions-0-sub-0\" class=\"allArprtSec__list\">...</span>\nE         (Session info: chrome=133.0.6943.137); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6ADE41805+3048677]\nE       \t(No symbol) [0x00007FF6ADAC3B20]\nE       \t(No symbol) [0x00007FF6AD948FBA]\nE       \t(No symbol) [0x00007FF6AD9A7129]\nE       \t(No symbol) [0x00007FF6AD9A4AE2]\nE       \t(No symbol) [0x00007FF6AD9A1B81]\nE       \t(No symbol) [0x00007FF6AD9A0A81]\nE       \t(No symbol) [0x00007FF6AD992314]\nE       \t(No symbol) [0x00007FF6AD9C728A]\nE       \t(No symbol) [0x00007FF6AD991BC6]\nE       \t(No symbol) [0x00007FF6AD9C74A0]\nE       \t(No symbol) [0x00007FF6AD9EF849]\nE       \t(No symbol) [0x00007FF6AD9C7063]\nE       \t(No symbol) [0x00007FF6AD98FFC0]\nE       \t(No symbol) [0x00007FF6AD991273]\nE       \tGetHandleVerifier [0x00007FF6ADEA1F5D+3443773]\nE       \tGetHandleVerifier [0x00007FF6ADEB596A+3524170]\nE       \tGetHandleVerifier [0x00007FF6ADEAB1A3+3481219]\nE       \tGetHandleVerifier [0x00007FF6ADC2A26A+855882]\nE       \t(No symbol) [0x00007FF6ADACEB3F]\nE       \t(No symbol) [0x00007FF6ADACAB64]\nE       \t(No symbol) [0x00007FF6ADACAD06]\nE       \t(No symbol) [0x00007FF6ADAB9E79]\nE       \tBaseThreadInitThunk [0x00007FFFC973E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFFCAA7C34C+44]\n\n..\\.venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:125: ElementClickInterceptedException"}, "attachments": [{"name": "stdout", "source": "1d72d9e6-5cbc-4c2d-b9f6-0d8f667b4e2c-attachment.txt", "type": "text/plain"}], "start": 1754486217043, "stop": 1754486263216, "uuid": "864d7a17-3419-4c6a-92e2-92f05b9e8e3b", "historyId": "2ea45abf3aa57146ff6c40e595d66399", "testCaseId": "2ea45abf3aa57146ff6c40e595d66399", "fullName": "test_flightBooking#test_flightBooking", "labels": [{"name": "suite", "value": "test_flightBooking"}, {"name": "host", "value": "PUMA-71500-WL"}, {"name": "thread", "value": "22160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flightBooking"}]}